{"version":3,"sources":["hoc/Wrapper.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","hoc/withErrorHandler/withErrorHandler.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js","components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css"],"names":["aux","props","children","logo","react_default","a","createElement","className","classes","Logo","style","height","src","image","alt","navigationItem","NavigationItem","react_router_dom","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","click","toolbar","Toolbar","opened","DesktopOnly","isAuth","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Closed","isOpen","Open","Wrapper","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerOpenedHandler","sideDrawerToggle","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Lettuce","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","BurgerIngredients","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchaseable","purchasing","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseContinued","purchaseCancelled","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","UI_Modal_Modal","message","_this2","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","eject","spinner","Loader","authSuccess","idToken","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","updatePurchaseState","sum","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","disabledInfo","objectSpread","ings","orderSummary","burger","textAlign","Spinner","overflow","onIngredientAdded","onIngredientRemoved","Burger_OrderSummary_OrderSummary","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","assign","onChange","changed","elementConfig","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFailed","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","react_router","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","Logout","onLogout","App","onTryAutoSignup","routes","components_Layout_Layout","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","lettuce","cheese","meat","bacon","reducer","undefined","action","updatedState","updatedStateR","newOrder","orderID","userID","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","enable","Success","Danger","__webpack_require__","p","load1"],"mappings":"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","file":"static/js/main.36df8a31.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\n\r\nimport image from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{ height: props.height }}>\r\n        <img src={image} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\nexport default logo;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css'\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n\r\n    </li>\r\n)\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated ?\r\n            <NavigationItem link=\"/auth\">Authenticate</NavigationItem> :\r\n            <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n)\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.click}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (<header className={classes.Toolbar}>\r\n        <DrawerToggle click={props.opened} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>);\r\n}\r\n\r\n\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => {\r\n    return (props.show ?\r\n        <div className={classes.Backdrop} onClick={props.clicked}>\r\n        </div>\r\n        : null\r\n    );\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Wrapper';\r\n\r\nimport classes from './SideDrawer.module.css';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Closed];\r\n    if (props.isOpen) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.isOpen} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Wrapper';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n    sideDrawerOpenedHandler = () => {\r\n        this.setState({ showSideDrawer: true })\r\n    }\r\n\r\n    sideDrawerToggle = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    opened={this.sideDrawerToggle}\r\n                    isAuth={this.props.isAuthenticated} />\r\n                <SideDrawer\r\n                    closed={this.sideDrawerClosedHandler}\r\n                    isOpen={this.state.showSideDrawer}\r\n                    isAuth={this.props.isAuthenticated} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux >);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredients.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('lettuce'):\r\n                ingredient = <div className={classes.Lettuce}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\n\r\nimport classes from './Burger.module.css';\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            });\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Build your own burger!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(burger);","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Lettuce', type: 'lettuce' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>$</strong><strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.purchasing}>{props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\n\r\nimport Aux from '../../../hoc/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.show !== this.props.show) || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return (<button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n    >{props.children}</button>\r\n    );\r\n}\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Wrapper';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return <li key={igKey}>\r\n                    <span style={{ textTransform: 'capitalize' }}>{igKey}</span>:\r\n                      {this.props.ingredients[igKey]}\r\n                </li>\r\n            });\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients: </p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType='Success' clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n                <Button btnType='Danger' clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n            </Aux >\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-88892.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Wrapper';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            })\r\n            this.responseInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error })\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: idToken,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAFKWp0RMJe9udz8sa3W_aisgHeJ14TQKg';\r\n        if (!isSignup) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAFKWp0RMJe9udz8sa3W_aisgHeJ14TQKg';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error));\r\n            })\r\n\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            } else {\r\n                dispatch(logout())\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            }\r\n            ).reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return (sum > 0);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true })\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null\r\n        let burger = this.props.error ? <h3 style={{ textAlign: 'center' }}>Ingredients can't be loaded!</h3> : <Spinner />;\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <div style={{ overflow: 'auto' }}>\r\n                        <Burger ingredients={this.props.ings} />\r\n                    </div>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        purchasing={this.purchaseHandler} />\r\n                </Aux>);\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price} />;\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\n\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        ingredientName: name,\r\n        type: actionTypes.ADD_INGREDIENT\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        ingredientName: name,\r\n        type: actionTypes.REMOVE_INGREDIENT\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-burger-88892.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFailed = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFailed(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            });\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes good!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n\r\n    const inputClasses = [classes.InputElement]\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                onChange={props.changed}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                onChange={props.changed}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    onChange={props.changed}\r\n                    value={props.value}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                onChange={props.changed}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport classes from './ContactData.module.css';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ]\r\n\r\n                },\r\n                value: 'fastest',\r\n                valid: true,\r\n                validation: {}\r\n            },\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.touched = true;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\r\n        }\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button\r\n                    btnType=\"Success\"\r\n                    clicked={this.orderHandler}\r\n                    disabled={!this.state.formIsValid} >ORDER</Button>\r\n            </form>);\r\n        if (this.props.loading === true) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Information</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to='/' />\r\n\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\r\n            summary =\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        });\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            key={ig.name}\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}>{ig.name} ({ig.amount})\r\n            </span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>${Number.parseFloat(props.price).toFixed(2)}</strong> </p>\r\n        </div>);\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\n\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport * as actions from '../../store/actions/index';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />\r\n        if (!this.props.loading) {\r\n            orders =\r\n                <div>\r\n                    {this.props.orders.map(order => (\r\n                        <Order\r\n                            key={order.id}\r\n                            ingredients={order.ingredients}\r\n                            price={order.price} />\r\n                    ))}\r\n                </div>\r\n        }\r\n        return orders;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nimport classes from './Auth.module.css'\r\n\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        this.setState({ controls: updatedControls })\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        };\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">{this.state.isSignup ? 'CREATE USER' : 'SIGN IN'}</Button>\r\n                </form>\r\n                <Button\r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">{this.state.isSignup ? 'LOG IN TO YOUR ACCOUNT' : 'CREATE AN ACCOUNT'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport './App.css'\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index'\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onTryAutoSignup();\n    }\n\n    render() {\n        let routes = (\n            <Switch>\n                <Route path='/auth' component={Auth} />\n                <Route path='/' component={BurgerBuilder} />\n                <Redirect to=\"/\" />\n            </Switch >\n        );\n        if (this.props.isAuthenticated) {\n            routes = (\n                <Switch>\n                    <Route path='/checkout' component={Checkout} />\n                    <Route path='/orders' component={Orders} />\n                    <Route path='/logout' component={Logout} />\n                    <Route path='/auth' component={Auth} />\n                    <Route path='/' component={BurgerBuilder} />\n                    <Redirect to=\"/\" />\n                </Switch >\n            )\n        }\n\n        return (\n            <div>\n                <Layout>\n                    {routes}\n                </Layout>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\n\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    lettuce: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            const updatedIngredients = updateObject(state.ingredients,\r\n                { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 });\r\n            const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n            return updateObject(state, updatedState);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            const updatedIngredientsR = updateObject(state.ingredients,\r\n                { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 });\r\n            const updatedStateR = {\r\n                ingredients: updatedIngredientsR,\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n            return updateObject(state, updatedStateR);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return updateObject(state, {\r\n                ingredients: {\r\n                    lettuce: action.ingredients.lettuce,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            });\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return updateObject(state, { error: true })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true })\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.orderID });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                orders: state.orders.concat(newOrder),\r\n                purchased: true\r\n            });\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false })\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject(state, { loading: true });\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            });\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, { loading: false })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nimport { updateObject } from '../utility'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userID: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(\r\n        state,\r\n        {\r\n            token: null,\r\n            userId: null\r\n        }\r\n    )\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return updateObject(state, { error: null, loading: true });\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__hyxI7\",\"BreadTop\":\"BurgerIngredients_BreadTop__29CPR\",\"Seeds1\":\"BurgerIngredients_Seeds1__1iQCL\",\"Seeds2\":\"BurgerIngredients_Seeds2__2_yJX\",\"Meat\":\"BurgerIngredients_Meat__18giN\",\"Cheese\":\"BurgerIngredients_Cheese__3yF96\",\"Lettuce\":\"BurgerIngredients_Lettuce__3WD4E\",\"Bacon\":\"BurgerIngredients_Bacon__kbUJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1meX1\",\"Open\":\"SideDrawer_Open__2ZFHj\",\"Closed\":\"SideDrawer_Closed__1b_87\",\"Logo\":\"SideDrawer_Logo__1kAhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__22QoW\",\"Label\":\"BuildControl_Label__3N4-W\",\"Less\":\"BuildControl_Less__1Mw1K\",\"More\":\"BuildControl_More__exRpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1fbVC\",\"Label\":\"Input_Label__1JeoN\",\"InputElement\":\"Input_InputElement__3u0HR\",\"Invalid\":\"Input_Invalid__1Dtfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2tzgl\",\"Logo\":\"Toolbar_Logo__1fN_j\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3Ig3D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1kuLw\",\"active\":\"NavigationItem_active__2szVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2JXno\",\"OrderButton\":\"BuildControls_OrderButton__3Odbp\",\"enable\":\"BuildControls_enable__3iRnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1KtpL\",\"Success\":\"Button_Success__1Sz4E\",\"Danger\":\"Button_Danger__2V0N0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1wb0s\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3HKyO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3I2cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3-9CU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__bHais\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__39J0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2XOlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2eoGm\",\"load1\":\"Spinner_load1__2BnWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2Kyj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__Z_w_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order___aasn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__K7CP_\"};"],"sourceRoot":""}